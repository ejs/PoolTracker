<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Hello Wave" height="35">
    <Require feature="wave" /> 
  </ModulePrefs>
  <Content type="html">
    <![CDATA[     
       <style type="text/css">
          #content.edit ul {display : none; }
          ul { padding: 0; font-size: 0.8em;}
          li { display: inline; height: 1em; float: left;  width : 1em; margin: 0 0.1em; -moz-border-radius: 1em; -webkit-border-radius: 1em;}
          li.unavalable { display:none; }
          li.clear, li.full, li.empty { cursor: pointer; }
          li.full { background-color: #000; }
          li.empty { background-color: #BBB; }
          li.breaker { width: .5em; }
          #content.view form {display: none; }
          form { display: inline; font-size: .8em;}
      </style>
      <script type="text/javascript">
            function set_pool(item) {
                if (item.className != 'unavalable' ) {
                    var element = item.parentNode;
                    var count = 0;
                    for (var i in element.childNodes) {
                        var node = element.childNodes[i];
                        if (node.className == 'full' || node.className == 'empty')
                            count += 1;
                        if (node == item)
                            break;
                    }
                    wave.getState().submitValue('pool', count);
                }
            }

            function set_cap() {
                wave.getState().submitValue('cap', document.getElementById("selector").selectedIndex);
            }
            
            function updatePool() {
                var state = wave.getState();
                var avalable = parseInt(state.get('cap', 10));
                var active = parseInt(state.get('pool', 0));

                var element = document.getElementById("pool");
                var count = 0;
                for (var i in element.childNodes) {
                    var node = element.childNodes[i];
                    if (node.className == 'full' || node.className == 'empty' || node.className == 'unavalable') {
                        if ( count >= avalable )
                            node.className = 'unavalable'; 
                        else
                            node.className = (count < active) ? 'full' : 'empty'; 
                        count += 1;
                    }
                }
                for (var i = count; i < avalable ; i ++) {
                    var newdiv = document.createElement('li');
                    newdiv.onclick = function() { set_pool(this);}
                    newdiv.className = (i < active) ? 'full' : 'empty';
                    element.appendChild(newdiv);
                    if (i%5 == 4){
                        var newdevider = document.createElement('li');
                        newdevider.className="breaker";
                        element.appendChild(newdevider);
                    }
                }

                var selector = document.getElementById("selector");
                var count = 0;
                for( var i in selector.childNodes) {
                    if (selector.childNodes[i].tagName == "OPTION") {
                        selector.childNodes[i].style.display = (count <= (avalable + 5)) ? "" : "none";
                        count += 1;
                    }
                }
                for (var i = count; i <= avalable+5 ; i ++) {
                    var newdiv = document.createElement('option');
                    newdiv.textContent = i;
                    newdiv.value = i;
                    selector.appendChild(newdiv);
                }
                selector.selectedIndex = avalable;
            }

            function updateMode(mode) {
                var e = document.getElementById('content');
                e.className = mode == wave.Mode.EDIT ? 'edit' : 'view';
            }
            
            gadgets.util.registerOnLoadHandler(function() {
                wave.setStateCallback(updatePool);
                wave.setModeCallback(updateMode);
            });
      </script>
      <div id="content">
        <ul class="pool" id="pool">
          <li class="clear" onClick="set_pool(this);">X</li>
        </ul>
        <form>
          <label>Max Value</label>
          <select name="maxvalue" id="selector" onClick="set_cap();">
            <option value="0">0</option>
          </select>
          <button type="Button" onClick="set_cap()">Set Cap</button>
        </form>
      </div>
    ]]>
  </Content>
</Module>
