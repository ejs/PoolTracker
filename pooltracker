<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Hello Wave" height="30">
    <Require feature="wave" /> 
  </ModulePrefs>
  <Content type="html">
    <![CDATA[     
       <style type="text/css">
          body { font-size: 0.5em; }
          ul { padding: 0; }
          li { display: inline; height: 1em; float: left;  width : 1em;   margin: 0 0.1em; -moz-border-radius: 1em; -webkit-border-radius: 1em; }
          li.unavalable { border: 1px solid grey; }
          li.clear { cursor: pointer; }
          li.empty, li.full{ border: 1px solid black; cursor: pointer; }
          li.full { background-color: #000; }
          li.empty { background-color: #DDD; }
          form { display: inline; }
      </style>
      <script type="text/javascript">
            function set_pool(item) {
                if (item.className != 'unavalable' ) {
                    var element = item.parentNode;
                    var count = 0;
                    for (var i in element.childNodes) {
                        var node = element.childNodes[i];
                        if (node.className == 'full' || node.className == 'empty')
                            count += 1;
                        if (node == item)
                            break;
                    }
                    wave.getState().submitValue('pool', count);
                }
            }

            function set_cap() {
                value = document.getElementById("selector").selectedIndex;
                wave.getState().submitValue('cap', value);
            }
            
            function updatePool() {
                var state = wave.getState();
                var avalable = parseInt(state.get('cap', 10));
                var active = parseInt(state.get('pool', 0));

                var element = document.getElementById("pool");
                var count = 0;
                for (var i in element.childNodes) {
                    var node = element.childNodes[i];
                    if (node.className == 'full' || node.className == 'empty' || node.className == 'unavalable') {
                        if ( count >= avalable ) {
                            node.style.display = "";
                            node.className = 'unavalable';
                        }
                        else if (count < active ){
                            node.style.display = "";
                            node.className = 'full';
                        }
                        else if (count < active + 5) {
                            node.style.display = "";
                            node.className = 'empty'; 
                        }
                        else {
                            node.className = 'empty hidden'; 
                            node.style.display = "none";
                        }
                        count += 1;
                    }
                }
                for (var i = count; i <= avalable+5 ; i ++) {
                    var newdiv = document.createElement('li');
                    /* Add an event listener */
                    if ( i >= avalable )
                        newdiv.className = 'unavalable';
                    else if (i < active )
                        newdiv.className = 'full';
                    else
                        newdiv.className = 'empty'; 
                    element.appendChild(newdiv);
                }

                var selector = document.getElementById("selector");
                var count = 0;
                for( var i in selector.childNodes) {
                    var node = selector.childNodes[i];
                    if (node.tagName == "OPTION") {
                        node.style.display = (count < (avalable + 5)) ? "" : "none";
                        count += 1;
                    }
                }
                for (var i = count; i <= avalable+5 ; i ++) {
                    if ( i >= count ) {
                        var newdiv = document.createElement('option');
                        newdiv.textContent = i;
                        newdiv.value = i;
                        selector.appendChild(newdiv);
                    }
                }
                selector.selectedIndex = avalable;
            }
            
            gadgets.util.registerOnLoadHandler(function() { wave.setStateCallback(updatePool);updatePool(); });
      </script>
      <ul class="pool" id="pool">
        <li class="clear" onClick="set_pool(this);">X</li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="breaker"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="empty" onClick="set_pool(this);"></li>
        <li class="breaker"></li>
      </ul>
      <form>
        <label>Max Value</label>
        <select name="maxvalue" id="selector" onClick="set_cap();">
          <option value="0">0</option>
        </select>
      </form>
      <button onClick="set_cap()">Set Cap</button>
    ]]>
  </Content>
</Module>
